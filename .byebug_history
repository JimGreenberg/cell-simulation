exit
var instance @deads.first
var instance @deads.sample
exit
@space
@trash.length
@cells.length
@deads.length
continue
@space
exit
@deads.length
continue
@trash.length
@deads.length
continue
@trash.length
@deads.length
continue
@trash.length
@deads.length
continue
@trash.length
@deads.length
continue
@trash.length
@deads.length
exit
@cells.length
@trash.length
@deads.length
continue
@cells.length
@trash.length
@deads.length
continue
@trash.length
@deads.length
@cells.length
exit
@deads.length
@cells.length
@trash.length
continue
@cells.length
@trash.length
@deads.length
exit
@deads.length
exit
@cells.length
@deads.length
@trash.length
exit
@trash.length
@deads.length
@cells.length
continue
@trash.length
@deads.length
@cells.length
continue
@trash.length
@deads.length
@cells.length
continue
@cells.length
@deads.length
@trash.length
continue
@deads.length
@cells.length
@trash.length
continue
@cells.length
@trash.length
@deads.length
continue
@cells.length
@deads.length
@dead.length
@trash
@deads.each {|a| puts @cells.include?(a) };
@deads.each {|a| puts @cells.include?(a) }
@deads.each {|a| @cells.include?(a) }
@deads.uniq(@cells)
@dead
@cells.any? {|a| a.dead }
@cells.any? { @dead }
@cells.length
@deads.length
continue
@cells.length
@trash.length
var instance @deads[1]
var instance @deads.first
@trash.length
@deads.length
continue
var instance @deads[2]
var instance @deads[1]
var instance @deads.first
@deads.length
@deads
self
exit
@deads.count
exit
@deads.count
exit
@deads.count
exit
@deads.length
exit
@cells.first.joints.first.class == CP::Constraint::DampedSpring
@cells.first.joints.first.class == DampedSpring
@cells.first.joints.first.class == Constraint
@cells.first.joints.first.class
exit
@deads.length
@deads.uniq.length
continue
@deads.uniq.length
@deads.length
continue
@deads.length
continue
@deads.count
continue
@deads.length
continue
@space.bodies
@space
@foods.length
@cells.length
@trash.length
@deads.length
var instance
var local
@shapes
exit
var instance @cells.sample
exit
var instance @cells.sample
exit
matelist(window)
self
exit
@headshape.object
exit
@headshape.self
@headshape.object
@headshape
exit
@headshape.collision_type
@headshape
self.class
self
exit
v instance @cells.first @headshape.collision_type
v instance @cells.first.headshape.collision_type
v instance @cells.first.shape.collision_type
v
var
help
self.class
self
show
up
where
help
exit
@headshape.collision_type
@genes
@head.p.y
@head.p.x
self.class
self
continue
exit
@headshape.collision_type
@headshape
self
exit
self.class
next
self.class
next
self.class
self
var instance @cells.first @headshape
var instance @cells.first.shape
var instance @cells.first.shapes
var instance @cells.first
exit
readyeat?(window)
exit
@cells.each {|c| print c.readyeat?(self) }exit
@cells.each {|c| print c.readyeat?(self) }
@cells.each {|c| p c.readyeat?(self) }
@cells.each {|c| p c.readyeat?(window) }
@cells.each {|c| p c.readyeat?(self) }
@cells.each {|c| p c.readyeat? }
@cells
exit
@action
@hunger >= 75
var instance
self.hunger
window.is_a?(GameWindow)
window.is_a(GameWindow)
window.is_a(Window)
window
safe?(window)
safe?
exit
var instance
var self
continue
var instance
var
var self
var local
exit
continue
var instance @cells.first
@trash.length
@deads.length
continue
@trash.length
@deads.length
exit
@trash.length
@deads.length
self
exit
var instance @cells.first
continue
var instance @cells.first
continue
var instance @cells.first
continue
var instance @cells.first
@cells.first
continue
var instance @deads.first
exit
var instance @deads.first
var
@deads.first.var
@deads.first
@deads
@cells
@cells.first
exit
@cells.sample.action
